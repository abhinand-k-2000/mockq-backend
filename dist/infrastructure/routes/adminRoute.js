"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminController_1 = __importDefault(require("../../adaptors/controllers/adminController"));
const adminUseCase_1 = __importDefault(require("../../use-cases/adminUseCase"));
const adminRepository_1 = __importDefault(require("../repository/adminRepository"));
const JwtToken_1 = __importDefault(require("../utils/JwtToken"));
const adminAuth_1 = __importDefault(require("../middlewares/adminAuth"));
const router = express_1.default.Router();
const jwt = new JwtToken_1.default(process.env.JWT_SECRET);
const adminRepository = new adminRepository_1.default();
const adminCase = new adminUseCase_1.default(adminRepository, jwt);
const controller = new adminController_1.default(adminCase);
router.post('/login', (req, res, next) => controller.login(req, res, next));
router.post('/create', (req, res, next) => controller.createAdmin(req, res, next));
router.get('/candidates-list', adminAuth_1.default, (req, res, next) => controller.getAllCandidates(req, res, next));
router.put('/block-candidate/:id', adminAuth_1.default, (req, res, next) => controller.blockCandidate(req, res, next));
router.post('/logout', (req, res, next) => controller.logout(req, res, next));
router.post('/add-stack', adminAuth_1.default, (req, res, next) => controller.addStack(req, res, next));
router.get('/stacks-list', adminAuth_1.default, (req, res, next) => controller.getAllStacks(req, res, next));
router.put('/unlist-stack/:id', adminAuth_1.default, (req, res, next) => controller.unlistStack(req, res, next));
router.get('/interviewers-list', adminAuth_1.default, (req, res, next) => controller.getAllInterviewers(req, res, next));
router.get('/interviewer/:id', adminAuth_1.default, (req, res, next) => controller.getInterviewerDetails(req, res, next));
router.put('/approve-interviewer/:id', adminAuth_1.default, (req, res, next) => controller.approveInterviewer(req, res, next));
router.get('/interviews-list', adminAuth_1.default, (req, res, next) => controller.getAllInterviews(req, res, next));
router.get('/dashboard', adminAuth_1.default, (req, res, next) => controller.getDashboardDetails(req, res, next));
exports.default = router;
